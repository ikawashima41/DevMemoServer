rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    function isAnyAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userID) {
      return isAnyAuthenticated && userID == request.auth.uid;
    }

    match /users/{userID} {
      allow create: if isUserAuthenticated(userID)
        && (!('name' in request.resource.data) || (request.resource.data.name is string && request.resource.data.name.size() <= 20))
        && (!('iconURL' in request.resource.data) || (request.resource.data.iconURL is string && request.resource.data.iconURL.size() <= 1000))
        && request.resource.data.createAt == request.time
        && request.resource.data.updateAt == request.time
      ;
      allow update: if isUserAuthenticated(userID) && request.resource.data.updateAt == request.time;
      allow get: if isUserAuthenticated(userID);


      match /memos/{memoID} {
        allow create: if isUserAuthenticated(userID)
          && request.resource.data.createAt == request.time
          && request.resource.data.updateAt == request.time
      }
    }
  }
}